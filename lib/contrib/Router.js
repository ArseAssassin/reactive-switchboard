// Generated by CoffeeScript 1.9.2
(function() {
  var Route, defineComponent, dom, ref;

  Route = require('route-parser');

  ref = require('./utils'), defineComponent = ref.defineComponent, dom = ref.dom;

  module.exports = function(board) {
    return defineComponent({
      mixins: [board.mixin],
      wireState: function() {
        return {
          path: this.board.path.signal
        };
      },
      getDefaultProps: function() {
        return {
          error: function() {
            return dom.h1(null, '404');
          }
        };
      },
      render: function() {
        var child, i, len, ref1, response;
        ref1 = [].concat(this.props.children);
        for (i = 0, len = ref1.length; i < len; i++) {
          child = ref1[i];
          if (!child) {
            continue;
          }
          response = child(this.state.path);
          if (response) {
            return response;
          }
        }
        return this.props.error();
      }
    });
  };

  module.exports.route = function(path, respond) {
    var route;
    route = new Route(path);
    return function(currentPath) {
      var result;
      result = route.match(currentPath);
      if (result) {
        return respond(result);
      }
    };
  };

}).call(this);
